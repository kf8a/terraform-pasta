# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # config.vm.provider :virtualbox do |vb|
  #   vb.gui = true
  # end

  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  config.vm.boot_timeout = 3600

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "debian8"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  # config.vm.box_url = "https://github.com/holms/vagrant-jessie-box/releases/download/Jessie-v0.1/Debian-jessie-amd64-netboot.box"
  # config.vm.box_url = "http://oshtemo.kbs.msu.edu/package.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
#  config.vm.synced_folder ".", "/vagrant_data"
  # config.vm.synced_folder "./lter", "/var/www/lter", :owner => 'www-data', :group => 'www-data'

  config.vm.provision :ansible do |ansible|
    ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
    ansible.inventory_path = "hosts"
    ansible.sudo = true
    ansible.playbook = "pasta-setup.yml"
  end
  #
  #   # You may also specify custom JSON attributes:
    # chef.json = { :mysql => 
    #   {"server_debian_password" => "total.bull",
    #    "server_root_password"   => "total.bull",
    #    "server_repl_password"   => "total.bull" }
    # }
  # end

end
